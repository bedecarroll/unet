apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: unet-ingress
  namespace: unet
  labels:
    app.kubernetes.io/name: unet-ingress
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: unet
  annotations:
    # NGINX Ingress Controller annotations
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-Frame-Options "DENY" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Certificate management (cert-manager)
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # AWS ALB annotations (alternative to NGINX)
    # kubernetes.io/ingress.class: "alb"
    # alb.ingress.kubernetes.io/scheme: "internet-facing"
    # alb.ingress.kubernetes.io/target-type: "ip"
    # alb.ingress.kubernetes.io/healthcheck-path: "/health"
    # alb.ingress.kubernetes.io/healthcheck-interval-seconds: "30"
    # alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
    # alb.ingress.kubernetes.io/healthy-threshold-count: "2"
    # alb.ingress.kubernetes.io/unhealthy-threshold-count: "3"
    # alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:region:account:certificate/cert-id"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - unet.example.com
    - api.unet.example.com
    secretName: unet-tls-cert
  rules:
  - host: unet.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: unet-server-internal
            port:
              number: 8080
  - host: api.unet.example.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: unet-server-internal
            port:
              number: 8080
      - path: /metrics
        pathType: Exact
        backend:
          service:
            name: unet-server-internal
            port:
              number: 8080
      - path: /health
        pathType: Exact
        backend:
          service:
            name: unet-server-internal
            port:
              number: 8080

---
# Alternative ALB Ingress for AWS
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: unet-alb-ingress
  namespace: unet
  labels:
    app.kubernetes.io/name: unet-alb-ingress
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: unet
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/target-type: "ip"
    alb.ingress.kubernetes.io/healthcheck-path: "/health"
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "30"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
    alb.ingress.kubernetes.io/healthy-threshold-count: "2"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "3"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:region:account:certificate/cert-id"
    alb.ingress.kubernetes.io/tags: "Environment=production,Project=unet"
spec:
  rules:
  - host: unet.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: unet-server-internal
            port:
              number: 8080