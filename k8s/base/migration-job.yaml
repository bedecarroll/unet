apiVersion: batch/v1
kind: Job
metadata:
  name: unet-migration
  namespace: unet
  labels:
    app.kubernetes.io/name: unet-migration
    app.kubernetes.io/component: migration
    app.kubernetes.io/part-of: unet
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: unet-migration
        app.kubernetes.io/component: migration
        app.kubernetes.io/part-of: unet
    spec:
      restartPolicy: Never
      serviceAccountName: unet-migration
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: migration
        image: ghcr.io/example/unet-server:latest
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/unet-server
        - migrate
        - --config
        - /app/config/config.toml
        env:
        - name: RUST_LOG
          value: "info"
        - name: UNET_CONFIG_PATH
          value: "/app/config"
        - name: UNET_DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: unet-secrets
              key: database-url
        - name: MIGRATION_MODE
          value: "up"
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      volumes:
      - name: config
        configMap:
          name: unet-config
      nodeSelector:
        kubernetes.io/arch: amd64
  backoffLimit: 3
  activeDeadlineSeconds: 600

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: unet-migration
  namespace: unet
  labels:
    app.kubernetes.io/name: unet-migration
    app.kubernetes.io/component: migration
    app.kubernetes.io/part-of: unet

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: unet-migration
  namespace: unet
  labels:
    app.kubernetes.io/name: unet-migration
    app.kubernetes.io/component: migration
    app.kubernetes.io/part-of: unet
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: unet-migration
  namespace: unet
  labels:
    app.kubernetes.io/name: unet-migration
    app.kubernetes.io/component: migration
    app.kubernetes.io/part-of: unet
subjects:
- kind: ServiceAccount
  name: unet-migration
  namespace: unet
roleRef:
  kind: Role
  name: unet-migration
  apiGroup: rbac.authorization.k8s.io