name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-and-upload:
    name: Build and Upload
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: unet-linux-x86_64.tar.gz
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            name: unet-linux-x86_64-musl.tar.gz
          - target: x86_64-apple-darwin
            os: macos-latest
            name: unet-macos-x86_64.tar.gz
          - target: aarch64-apple-darwin
            os: macos-latest
            name: unet-macos-aarch64.tar.gz

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: Install sccache
        run: |
          cargo install sccache || true
      - name: Cache sccache
        uses: actions/cache@v4
        with:
          path: ~/.cache/sccache
          key: sccache-${{ runner.os }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            sccache-${{ runner.os }}-${{ matrix.target }}-

      - name: Install musl tools
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Build release binary
        env:
          RUSTC_WRAPPER: sccache
        run: cargo build --release --target ${{ matrix.target }} --bin unet-server --bin unet-cli

      - name: Create archive
        run: |
          mkdir release
          cp target/${{ matrix.target }}/release/unet-server release/
          cp target/${{ matrix.target }}/release/unet-cli release/
          cp README.md release/
          cp -r docs/src release/docs
          cd release
          tar czf ../${{ matrix.name }} *

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ matrix.name }}
          asset_name: ${{ matrix.name }}
          asset_content_type: application/octet-stream
