[workspace]
resolver = "2"
members = [
    "crates/unet-core",
    "crates/unet-server", 
    "crates/unet-cli",
    "crates/config-slicer",
    "migrations",
]

[workspace.package]
version = "0.1.0"
edition = "2024"
rust-version = "1.85"
authors = ["Î¼Net Development Team"]
license = "MIT"
repository = "https://github.com/example/unet"
homepage = "https://github.com/example/unet"
description = "Network configuration management and automation tool"
keywords = ["network", "configuration", "automation", "snmp", "templates"]
categories = ["command-line-utilities", "network-programming", "config"]

[workspace.dependencies]
# Core async runtime
tokio = { version = "1.0", features = ["full"] }
tokio-test = "0.4"
async-trait = "0.1"
futures = "0.3"

# Serialization and data handling
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
uuid = { version = "1.0", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Configuration management
config = "0.14"
toml = "0.8"

# Database and ORM
sea-orm = { version = "0.12", features = ["sqlx-sqlite", "sqlx-postgres", "runtime-tokio-rustls", "macros"] }
sea-orm-migration = "0.12"

# HTTP client/server
axum = "0.7"
tower = "0.4"
tower-http = { version = "0.5", features = ["cors", "trace"] }
reqwest = { version = "0.11", features = ["json", "rustls-tls"], default-features = false }

# CLI parsing
clap = { version = "4.0", features = ["derive", "color", "suggestions"] }
clap_complete = "4.0"

# Template engine
minijinja = { version = "1.0", features = ["json"] }

# SNMP client  
snmp2 = "0.4.8"

# Git integration
git2 = "0.18"

# Policy parsing
pest = "2.7"
pest_derive = "2.7"

# Configuration diffing
similar = "2.2"

# Utility crates
regex = "1.0"
dashmap = "5.0"
walkdir = "2.4"
dirs = "5.0"
bytes = "1.0"
futures-util = "0.3"
strum = "0.26"
strum_macros = "0.26"
ipnet = "2.9"
rayon = "1.8"
indicatif = "0.17"
glob = "0.3"
sha2 = "0.10"
glob-match = "0.2"
url = "2.4"
log = "0.4"

# Task scheduling
tokio-cron-scheduler = "0.10"

# Logging and tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json", "registry", "fmt"] }
tracing-opentelemetry = "0.21"
opentelemetry = "0.21"
opentelemetry_sdk = { version = "0.21", features = ["rt-tokio"] }
opentelemetry-jaeger = { version = "0.20", features = ["rt-tokio"] }
tracing-appender = "0.2"
syslog-tracing = "0.3"
once_cell = "1.19"

# File handling
tempfile = "3.8"

# Testing
criterion = { version = "0.5", features = ["html_reports"] }

# Development and testing dependencies
assert_cmd = "2.0"
predicates = "3.0"
insta = "1.39"
proptest = "1.5"

# Async runtime for migration
async-std = { version = "1", features = ["attributes", "tokio1"] }

# Authentication and authorization
jsonwebtoken = "9.2"
bcrypt = "0.15"
axum-extra = { version = "0.9", features = ["typed-header"] }
headers = "0.4"

# TLS support
axum-server = { version = "0.6", features = ["tls-rustls"] }
rustls = "0.21"
rustls-pemfile = "1.0"

# Input validation and security
validator = { version = "0.16", features = ["derive"] }
sanitize_html = "0.4"
lazy_static = "1.4"


# Cryptography and secrets management
aes-gcm = "0.10"
chacha20poly1305 = "0.10"
argon2 = "0.5"
rand = "0.8"
zeroize = { version = "1.7", features = ["zeroize_derive"] }
keyring = "2.3"
base64 = "0.21"

# External secret store integrations
vaultrs = "0.7"  # HashiCorp Vault client
aws-sdk-secretsmanager = "1.0"  # AWS Secrets Manager
aws-config = "1.0"  # AWS configuration
# azure_security_keyvault = "0.18"  # Azure Key Vault (disabled due to API changes)

# Metrics and monitoring
prometheus = "0.13"
metrics = "0.22"
metrics-exporter-prometheus = "0.13"
axum-prometheus = "0.6"
sysinfo = "0.30"