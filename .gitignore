# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc may generate these, which store debugging information
*.pdb

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Temporary files
*.tmp
*.temp
*.log

# Environment and configuration
.env
.env.local
.env.*.local

# Database files
*.db
*.sqlite
*.sqlite3

# Test output
test-output/
test-*.json

# Documentation build output
book/
docs/book/

# Benchmarking results
benchmarks/
target/criterion/

# Coverage reports
target/tarpaulin/
coverage/
lcov.info

# Package manager files
node_modules/
package-lock.json
yarn.lock

# Python (if any tooling uses Python)
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Config files with sensitive data
config/production.toml
config/staging.toml
config/local.toml
.secrets/

# Backup files
*.bak
*.backup

# Temporary directories
tmp/
temp/

# Editor files
.kate-swp

# Logs
logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
dev-debug.log
# Dependency directories
# Environment variables
# Editor directories and files
.idea
.vscode
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
# OS specific

# Task files
# tasks.json
# tasks/ 
